
/*
 * Custom enchantments for Minecraft
 * Copyright (C) 2021 Big_Bad_E
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
    id 'java'
    id 'maven-publish'
}

import io.franzbecker.gradle.lombok.task.DelombokTask

lombok {
    version = '1.18.12'
    sha256 = ''
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo1.maven.org/maven2')
    }

    maven {
        url = uri('https://maven.pkg.github.com/bigbade/enchantmenttokens')
    }

    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://repo.aikar.co/content/groups/aikar/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }
}

configurations {
    resolveImplementation
    resolveImplementation.extendsFrom(implementation)
}

task delombok(type: DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file("${buildDir}/${delombok.name}")
    classpath += project.configurations.shadow
    classpath += project.configurations.resolveImplementation
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
}

javadoc {
    dependsOn delombok

    source = file("${buildDir}/${delombok.name}")
    classpath = configurations.compileClasspath

    options {
        setMemberLevel JavadocMemberLevel.PUBLIC
        setAuthor true

        links "https://docs.oracle.com/javase/8/docs/api/"
    }
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    dependsOn delombok

    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

sourceSets {
    test {
        compileClasspath += configurations.resolveImplementation
        compileClasspath += configurations.shadow
        runtimeClasspath += configurations.resolveImplementation
        runtimeClasspath += configurations.shadow
    }
}

dependencies {
    implementation fileTree(dir: 'lib', include: '*.jar')

    shadow 'com.google.code.findbugs:jsr305:3.+'
    shadow 'org.spigotmc:spigot-api:1.15.+'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.+'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.+'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.+'

    shadow 'org.projectlombok:lombok:1.+'
    annotationProcessor 'org.projectlombok:lombok:1.+'

    testCompileOnly 'org.projectlombok:lombok:1.+'
    testAnnotationProcessor 'org.projectlombok:lombok:1.+'
}

shadowJar {
    archiveClassifier.set('')
    archiveBaseName.set('EnchantmentTokensAPI')

    relocate 'co.aikar', 'com.bigbade'

    exclude 'META-INF/**'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

group = 'com.bigbade'
version = '1.1-alpha'

build.dependsOn publishToMavenLocal
